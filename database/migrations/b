<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateBasicEcommerceSchema extends Migration
{
    public function up()
    {
        // USERS
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->string('password');
            $table->string('phone', 15)->nullable();
            $table->enum('role', ['admin', 'user'])->default('user');
            $table->boolean('is_active')->default(true);
            $table->timestamps();
            $table->softDeletes();
        });

        // PRODUCT CATEGORIES
        Schema::create('product_categories', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->timestamps();
            $table->softDeletes();
        });

        // BRANDS
        Schema::create('brands', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->timestamps();
            $table->softDeletes();
        });

        // PRODUCTS
        Schema::create('products', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->text('description');
            $table->foreignId('category_id')->constrained('product_categories')->onDelete('cascade');
            $table->foreignId('brand_id')->constrained('brands')->onDelete('cascade');
            $table->decimal('price', 12, 2);
            $table->boolean('is_active')->default(true);
            $table->timestamps();
            $table->softDeletes();
        });

        // SIZES
        Schema::create('sizes', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->timestamps();
        });

        // COLORS
        Schema::create('colors', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('hex_code');
            $table->timestamps();
        });

        // PRODUCT VARIANTS
        Schema::create('product_variants', function (Blueprint $table) {
            $table->id();
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->foreignId('size_id')->nullable()->constrained('sizes')->onDelete('set null');
            $table->foreignId('color_id')->nullable()->constrained('colors')->onDelete('set null');
            $table->integer('quantity')->default(0);
            $table->timestamps();
        });

        // PRODUCT IMAGES
        Schema::create('product_images', function (Blueprint $table) {
            $table->id();
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->string('path');
            $table->timestamps();
        });

        // VOUCHERS
        Schema::create('vouchers', function (Blueprint $table) {
            $table->id();
            $table->string('code')->unique();
            $table->decimal('discount_amount', 10, 2);
            $table->timestamp('expiration_date');
            $table->timestamps();
        });

        // USER VOUCHERS
        Schema::create('user_vouchers', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('voucher_id')->constrained('vouchers')->onDelete('cascade');
            $table->boolean('is_used')->default(false);
            $table->timestamps();
        });

        // ADDRESSES
        Schema::create('addresses', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->string('address');
            $table->string('province');
            $table->string('district');
            $table->string('ward');
            $table->boolean('is_default')->default(false);
            $table->timestamps();
        });

        // PAYMENT METHODS
        Schema::create('payment_methods', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->timestamps();
        });

        // ORDERS
        Schema::create('orders', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('voucher_id')->nullable()->constrained('vouchers')->onDelete('set null');
            $table->decimal('total_price', 12, 2);
            $table->string('status');
            $table->timestamps();
            $table->softDeletes();
        });

        // ORDER DETAILS
        Schema::create('order_details', function (Blueprint $table) {
            $table->id();
            $table->foreignId('order_id')->constrained('orders')->onDelete('cascade');
            $table->foreignId('product_variant_id')->constrained('product_variants')->onDelete('cascade');
            $table->integer('quantity');
            $table->decimal('unit_price', 12, 2);
            $table->timestamps();
        });

        // PAYMENTS
        Schema::create('payments', function (Blueprint $table) {
            $table->id();
            $table->foreignId('order_id')->constrained('orders')->onDelete('cascade');
            $table->foreignId('method_id')->constrained('payment_methods')->onDelete('cascade');
            $table->decimal('amount', 12, 2);
            $table->timestamps();
        });

        // REVIEWS
        Schema::create('reviews', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->tinyInteger('rating')->unsigned();
            $table->text('comment');
            $table->timestamps();
        });

        // CARTS
        Schema::create('carts', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('product_variant_id')->constrained('product_variants')->onDelete('cascade');
            $table->integer('quantity')->default(1);
            $table->timestamps();
        });

        // WISHLISTS
        Schema::create('wishlists', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('wishlists');
        Schema::dropIfExists('carts');
        Schema::dropIfExists('reviews');
        Schema::dropIfExists('payments');
        Schema::dropIfExists('order_details');
        Schema::dropIfExists('orders');
        Schema::dropIfExists('payment_methods');
        Schema::dropIfExists('addresses');
        Schema::dropIfExists('user_vouchers');
        Schema::dropIfExists('vouchers');
        Schema::dropIfExists('product_images');
        Schema::dropIfExists('product_variants');
        Schema::dropIfExists('colors');
        Schema::dropIfExists('sizes');
        Schema::dropIfExists('products');
        Schema::dropIfExists('brands');
        Schema::dropIfExists('product_categories');
        Schema::dropIfExists('users');
    }
}


// tiếng việt

        // BẢNG NGƯỜI DÙNG
        Schema::create('nguoi_dung', function (Blueprint $table) {
            $table->id();
            $table->string('ten');
            $table->string('email')->unique();
            $table->string('mat_khau');
            $table->string('so_dien_thoai', 15)->nullable();
            $table->enum('vai_tro', ['quan_tri', 'nguoi_dung'])->default('nguoi_dung');
            $table->boolean('kich_hoat')->default(true);
            $table->timestamps();
            $table->softDeletes();
        });

        // BẢNG DANH MỤC SẢN PHẨM
        Schema::create('danh_muc_san_pham', function (Blueprint $table) {
            $table->id();
            $table->string('ten');
            $table->string('slug')->unique();
            $table->timestamps();
            $table->softDeletes();
        });

        // BẢNG THƯƠNG HIỆU
        Schema::create('thuong_hieu', function (Blueprint $table) {
            $table->id();
            $table->string('ten');
            $table->string('slug')->unique();
            $table->timestamps();
            $table->softDeletes();
        });

        // BẢNG SẢN PHẨM
        Schema::create('san_pham', function (Blueprint $table) {
            $table->id();
            $table->string('ten');
            $table->string('slug')->unique();
            $table->text('mo_ta');
            $table->foreignId('danh_muc_id')->constrained('danh_muc_san_pham')->onDelete('cascade');
            $table->foreignId('thuong_hieu_id')->constrained('thuong_hieu')->onDelete('cascade');
            $table->decimal('gia', 12, 2);
            $table->boolean('kich_hoat')->default(true);
            $table->timestamps();
            $table->softDeletes();
        });

        // BẢNG KÍCH CỠ
        Schema::create('kich_co', function (Blueprint $table) {
            $table->id();
            $table->string('ten');
            $table->timestamps();
        });

        // BẢNG MÀU SẮC
        Schema::create('mau_sac', function (Blueprint $table) {
            $table->id();
            $table->string('ten');
            $table->string('ma_mau');
            $table->timestamps();
        });

        // BẢNG BIẾN THỂ SẢN PHẨM
        Schema::create('bien_the_san_pham', function (Blueprint $table) {
            $table->id();
            $table->foreignId('san_pham_id')->constrained('san_pham')->onDelete('cascade');
            $table->foreignId('kich_co_id')->nullable()->constrained('kich_co')->onDelete('set null');
            $table->foreignId('mau_sac_id')->nullable()->constrained('mau_sac')->onDelete('set null');
            $table->integer('so_luong')->default(0);
            $table->timestamps();
        });

        // BẢNG HÌNH ẢNH SẢN PHẨM
        Schema::create('hinh_anh_san_pham', function (Blueprint $table) {
            $table->id();
            $table->foreignId('san_pham_id')->constrained('san_pham')->onDelete('cascade');
            $table->string('duong_dan');
            $table->timestamps();
        });

        // BẢNG MÃ GIẢM GIÁ
        Schema::create('ma_giam_gia', function (Blueprint $table) {
            $table->id();
            $table->string('ma')->unique();
            $table->decimal('so_tien_giam', 10, 2);
            $table->timestamp('ngay_het_han');
            $table->timestamps();
        });

        // BẢNG MÃ GIẢM GIÁ CỦA NGƯỜI DÙNG
        Schema::create('ma_giam_gia_nguoi_dung', function (Blueprint $table) {
            $table->id();
            $table->foreignId('nguoi_dung_id')->constrained('nguoi_dung')->onDelete('cascade');
            $table->foreignId('ma_giam_gia_id')->constrained('ma_giam_gia')->onDelete('cascade');
            $table->boolean('da_su_dung')->default(false);
            $table->timestamps();
        });

        // BẢNG ĐỊA CHỈ
        Schema::create('dia_chi', function (Blueprint $table) {
            $table->id();
            $table->foreignId('nguoi_dung_id')->constrained('nguoi_dung')->onDelete('cascade');
            $table->string('dia_chi');
            $table->string('tinh');
            $table->string('huyen');
            $table->string('xa');
            $table->boolean('mac_dinh')->default(false);
            $table->timestamps();
        });

        // BẢNG PHƯƠNG THỨC THANH TOÁN
        Schema::create('phuong_thuc_thanh_toan', function (Blueprint $table) {
            $table->id();
            $table->string('ten');
            $table->timestamps();
        });

        // BẢNG ĐƠN HÀNG
        Schema::create('don_hang', function (Blueprint $table) {
            $table->id();
            $table->foreignId('nguoi_dung_id')->constrained('nguoi_dung')->onDelete('cascade');
            $table->foreignId('ma_giam_gia_id')->nullable()->constrained('ma_giam_gia')->onDelete('set null');
            $table->decimal('tong_tien', 12, 2);
            $table->string('trang_thai');
            $table->timestamps();
            $table->softDeletes();
        });

        // BẢNG CHI TIẾT ĐƠN HÀNG
        Schema::create('chi_tiet_don_hang', function (Blueprint $table) {
            $table->id();
            $table->foreignId('don_hang_id')->constrained('don_hang')->onDelete('cascade');
            $table->foreignId('bien_the_san_pham_id')->constrained('bien_the_san_pham')->onDelete('cascade');
            $table->integer('so_luong');
            $table->decimal('gia', 12, 2);
            $table->timestamps();
        });

        // BẢNG THANH TOÁN
        Schema::create('thanh_toan', function (Blueprint $table) {
            $table->id();
            $table->foreignId('don_hang_id')->constrained('don_hang')->onDelete('cascade');
            $table->foreignId('phuong_thuc_id')->constrained('phuong_thuc_thanh_toan')->onDelete('cascade');
            $table->decimal('so_tien', 12, 2);
            $table->timestamps();
        });

        // BẢNG ĐÁNH GIÁ
        Schema::create('danh_gia', function (Blueprint $table) {
            $table->id();
            $table->foreignId('nguoi_dung_id')->constrained('nguoi_dung')->onDelete('cascade');
            $table->foreignId('san_pham_id')->constrained('san_pham')->onDelete('cascade');
            $table->tinyInteger('xep_hang')->unsigned();
            $table->text('binh_luan');
            $table->timestamps();
        });

        // BẢNG GIỎ HÀNG
        Schema::create('gio_hang', function (Blueprint $table) {
            $table->id();
            $table->foreignId('nguoi_dung_id')->constrained('nguoi_dung')->onDelete('cascade');
            $table->foreignId('bien_the_san_pham_id')->constrained('bien_the_san_pham')->onDelete('cascade');
            $table->integer('so_luong')->default(1);
            $table->timestamps();
        });

        // BẢNG YÊU THÍCH
        Schema::create('yeu_thich', function (Blueprint $table) {
            $table->id();
            $table->foreignId('nguoi_dung_id')->constrained('nguoi_dung')->onDelete('cascade');
            $table->foreignId('san_pham_id')->constrained('san_pham')->onDelete('cascade');
            $table->timestamps();
        });
