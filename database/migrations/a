<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateFullDatabaseSchema extends Migration
{
    public function up()
    {
        // USERS
        Schema::create('users', function (Blueprint $table) {
            $table->id(); // BIGINT auto increment PK
            $table->string('name');
            $table->string('email')->unique();
            $table->string('password');
            $table->string('phone', 15)->nullable();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('remember_token', 100)->nullable();
            $table->enum('role', ['admin', 'user'])->default('user');
            $table->timestamp('last_login_at')->nullable();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
            $table->softDeletes();
        });

        // PRODUCT CATEGORIES
        Schema::create('product_categories', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->string('image')->nullable();
            $table->foreignId('parent_id')->nullable()->constrained('product_categories')->onDelete('set null');
            $table->boolean('is_active')->default(true);
            $table->timestamps();
            $table->softDeletes();
        });

        // BRANDS
        Schema::create('brands', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->string('logo')->nullable();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
            $table->softDeletes();
        });

        // PRODUCTS
        Schema::create('products', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->string('sku')->unique()->nullable();
            $table->text('description');
            $table->text('short_description')->nullable();
            $table->foreignId('category_id')->constrained('product_categories')->onDelete('cascade');
            $table->foreignId('brand_id')->constrained('brands')->onDelete('cascade');
            $table->decimal('price', 12, 2);
            $table->decimal('original_price', 12, 2)->nullable();
            $table->decimal('weight', 10, 2)->nullable()->comment('Gram');
            $table->string('dimensions')->nullable()->comment('Dài x Rộng x Cao (cm)');
            $table->boolean('is_active')->default(true);
            $table->boolean('is_featured')->default(false);
            $table->integer('views')->default(0);
            $table->string('meta_title')->nullable();
            $table->text('meta_description')->nullable();
            $table->timestamps();
            $table->softDeletes();

            $table->index('is_active');
            $table->index('is_featured');
        });

        // SIZES
        Schema::create('sizes', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('description')->nullable();
            $table->timestamps();
            $table->softDeletes();
        });

        // COLORS
        Schema::create('colors', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('hex_code');
            $table->timestamps();
            $table->softDeletes();
        });

        // PRODUCT VARIANTS
        Schema::create('product_variants', function (Blueprint $table) {
            $table->id();
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->foreignId('size_id')->nullable()->constrained('sizes')->onDelete('set null');
            $table->foreignId('color_id')->nullable()->constrained('colors')->onDelete('set null');
            $table->integer('quantity')->default(0);
            $table->string('sku')->unique()->nullable();
            $table->timestamps();

            $table->unique(['product_id', 'size_id', 'color_id'], 'product_variant_unique');
        });

        // PRODUCT IMAGES
        Schema::create('product_images', function (Blueprint $table) {
            $table->id();
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->string('path');
            $table->boolean('is_thumbnail')->default(false);
            $table->integer('order')->default(0);
            $table->timestamps();
        });

        // SHIPPING METHODS
        Schema::create('shipping_methods', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('description')->nullable();
            $table->decimal('base_cost', 12, 2);
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

        // VOUCHERS
        Schema::create('vouchers', function (Blueprint $table) {
            $table->id();
            $table->string('code')->unique();
            $table->enum('discount_type', ['fixed', 'percentage']);
            $table->decimal('discount_amount', 10, 2);
            $table->decimal('min_order_value', 10, 2)->nullable();
            $table->integer('usage_limit')->nullable();
            $table->integer('used_count')->default(0);
            $table->timestamp('expiration_date');
            $table->timestamps();
            $table->softDeletes();
        });

        // USER VOUCHERS
        Schema::create('user_vouchers', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('voucher_id')->constrained('vouchers')->onDelete('cascade');
            $table->boolean('is_used')->default(false);
            $table->timestamp('assigned_at');
            $table->timestamp('used_at')->nullable();
            $table->timestamps();
            $table->softDeletes();
        });

        // ADDRESSES
        Schema::create('addresses', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->string('full_name');
            $table->string('phone');
            $table->string('address');
            $table->string('province');
            $table->string('district');
            $table->string('ward');
            $table->boolean('is_default')->default(false);
            $table->timestamps();
        });

        // ORDER STATUSES
        Schema::create('order_statuses', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('color')->default('#6b7280');
            $table->timestamps();
        });

        // PAYMENT METHODS
        Schema::create('payment_methods', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('code')->unique();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

        // ORDERS
        Schema::create('orders', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('voucher_id')->nullable()->constrained('vouchers')->onDelete('set null');
            $table->decimal('total_price', 12, 2);
            $table->string('status'); // ví dụ: pending, shipped, delivered,...
            $table->timestamp('canceled_at')->nullable();
            $table->timestamps();
            $table->softDeletes();
        });

        // PAYMENTS
        Schema::create('payments', function (Blueprint $table) {
            $table->id();
            $table->foreignId('order_id')->constrained('orders')->onDelete('cascade');
            $table->foreignId('method_id')->constrained('payment_methods')->onDelete('cascade');
            $table->string('transaction_code')->nullable();
            $table->decimal('amount', 12, 2);
            $table->enum('status', ['pending', 'completed', 'failed', 'refunded']);
            $table->text('notes')->nullable();
            $table->timestamps();
        });

        // ORDER DETAILS
        Schema::create('order_details', function (Blueprint $table) {
            $table->id();
            $table->foreignId('order_id')->constrained('orders')->onDelete('cascade');
            $table->foreignId('product_variant_id')->constrained('product_variants')->onDelete('cascade');
            $table->integer('quantity');
            $table->decimal('unit_price', 12, 2);
            $table->decimal('subtotal', 12, 2);
            $table->timestamps();
        });

        // ORDER STATUS HISTORY
        Schema::create('order_status_histories', function (Blueprint $table) {
            $table->id();
            $table->foreignId('order_id')->constrained('orders')->onDelete('cascade');
            $table->foreignId('status_id')->constrained('order_statuses')->onDelete('cascade');
            $table->text('notes')->nullable();
            $table->timestamps();
        });

        // RETURNS
        Schema::create('returns', function (Blueprint $table) {
            $table->id();
            $table->foreignId('order_id')->constrained('orders')->onDelete('cascade');
            $table->enum('type', ['refund', 'exchange']);
            $table->enum('status', ['pending', 'approved', 'rejected', 'completed']);
            $table->text('reason');
            $table->decimal('amount', 12, 2)->nullable();
            $table->text('admin_note')->nullable();
            $table->timestamps();
        });

        // RETURN ITEMS
        Schema::create('return_items', function (Blueprint $table) {
            $table->id();
            $table->foreignId('return_id')->constrained('returns')->onDelete('cascade');
            $table->foreignId('order_detail_id')->constrained('order_details')->onDelete('cascade');
            $table->integer('quantity');
            $table->text('reason');
            $table->timestamps();
        });

        // POST CATEGORIES
        Schema::create('post_categories', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
            $table->softDeletes();
        });

        // POSTS
        Schema::create('posts', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->string('slug')->unique();
            $table->text('content');
            $table->string('image')->nullable();
            $table->foreignId('category_id')->constrained('post_categories')->onDelete('cascade');
            $table->boolean('is_active')->default(true);
            $table->integer('views')->default(0);
            $table->string('meta_title')->nullable();
            $table->text('meta_description')->nullable();
            $table->timestamps();
            $table->softDeletes();
        });

        // REVIEWS
        Schema::create('reviews', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->tinyInteger('rating')->unsigned();
            $table->text('comment');
            $table->boolean('is_approved')->default(false);
            $table->timestamps();
        });

        // CARTS
        Schema::create('carts', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('product_variant_id')->constrained('product_variants')->onDelete('cascade');
            $table->integer('quantity')->default(1);
            $table->timestamps();

            $table->unique(['user_id', 'product_variant_id']);
        });

        // WISHLISTS
        Schema::create('wishlists', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->timestamps();

            $table->unique(['user_id', 'product_id']);
        });

        // TAGS
        Schema::create('tags', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->timestamps();
        });

        // PRODUCT_TAG (pivot)
        Schema::create('product_tag', function (Blueprint $table) {
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->foreignId('tag_id')->constrained('tags')->onDelete('cascade');

            $table->primary(['product_id', 'tag_id']);
        });

        // PROMOTIONS
        Schema::create('promotions', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->text('description')->nullable();
            $table->decimal('discount_value', 12, 2);
            $table->enum('discount_type', ['fixed', 'percentage']);
            $table->timestamp('start_date');
            $table->timestamp('end_date');
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

        // PRODUCT_PROMOTION (pivot)
        Schema::create('product_promotion', function (Blueprint $table) {
            $table->foreignId('product_id')->constrained('products')->onDelete('cascade');
            $table->foreignId('promotion_id')->constrained('promotions')->onDelete('cascade');

            $table->primary(['product_id', 'promotion_id']);
        });

        // STATISTICS
        Schema::create('statistics', function (Blueprint $table) {
            $table->id();
            $table->string('type');
            $table->integer('value')->default(0);
            $table->timestamp('recorded_at');
            $table->timestamps();
        });

        // STATISTICAL DAILY LOGS
        Schema::create('statistical_daily_logs', function (Blueprint $table) {
            $table->id();
            $table->string('type');
            $table->integer('value')->default(0);
            $table->date('date');
            $table->timestamps();
        });
    }

    public function down()
    {
        // Xóa theo thứ tự ngược lại để tránh lỗi foreign key
// Xóa theo thứ tự phụ thuộc để tránh lỗi foreign key
Schema::dropIfExists('users');
Schema::dropIfExists('product_categories');
Schema::dropIfExists('brands');
Schema::dropIfExists('products');
Schema::dropIfExists('sizes');
Schema::dropIfExists('colors');
Schema::dropIfExists('product_variants');
Schema::dropIfExists('product_images');
Schema::dropIfExists('vouchers');
Schema::dropIfExists('user_vouchers');
Schema::dropIfExists('addresses');
Schema::dropIfExists('shipping_methods');
Schema::dropIfExists('order_statuses');
Schema::dropIfExists('payment_methods');
Schema::dropIfExists('orders');
Schema::dropIfExists('payments');
Schema::dropIfExists('order_details');
Schema::dropIfExists('order_status_histories');
Schema::dropIfExists('returns');
Schema::dropIfExists('return_items');
Schema::dropIfExists('post_categories');
Schema::dropIfExists('posts');
Schema::dropIfExists('reviews');
Schema::dropIfExists('carts');
Schema::dropIfExists('wishlists');
Schema::dropIfExists('tags');
Schema::dropIfExists('product_tag');
Schema::dropIfExists('promotions');
Schema::dropIfExists('product_promotion');
Schema::dropIfExists('statistics');
Schema::dropIfExists('statistical_daily_logs');

    }
}
